---
- name: configure fortigate
  hosts: fortigate
  gather_facts: no
  collections:
    - fortinet.fortios
  vars:
    access_token: "GbkpGb53Gbd4Qrn1z7w8rg08t46csn" # token to execute config in Fortigate API
    ansible_user: "admin"       # Username for the FortiGate
    ansible_password: "admin" # Password for the FortiGate
    ansible_connection: httpapi # Variable to connect to API
    ansible_httpapi_use_ssl: True # Variable to use certs
    ansible_httpapi_validate_certs: False # Variable to ignore validate certs
    ansible_network_os: fortinet.fortios.fortios 
    subnet: "192.168.1.0/24" # subnet to create address

  tasks:

################### Create new address to use in policy ####################
    - name: Add source address
      fortinet.fortios.fortios_firewall_address:
        access_token: "{{ access_token }}"
        state: "present"
        firewall_address:
          name: "example_address"  # Name of the address object
          type: "ipmask"  # Address type (e.g., "ipmask" for subnet)
          subnet: "{{ subnet }}"  # IPv4 subnet in CIDR notation
          comment: "Example IPv4 address"  # Optional description
      ignore_errors: true

################### Create policy with ALLOW ALL to test communication #############
    - name: Configure IPv4/IPv6 policy Allow to test.
      fortinet.fortios.fortios_firewall_policy:
          vdom: "root"
          state: "present"
          access_token: "{{ access_token }}"
          firewall_policy:
              policyid: "0"
              name: "Test Policy"
              action: "accept"
              srcintf:
                - name: "port1"
              dstintf:
                - name: "port2"
              srcaddr:
                - name: "example_address"
              dstaddr:
                - name: "all"
              service:
                - name: "ALL"
              schedule: "always"
              logtraffic: "all"
      register: firewall_policy_1
      ignore_errors: true

    - name: debug ipv4 policy 
      debug: 
        msg: "{{ firewall_policy_1 }}"

###################### Create a policy to allow just ICMP ######################
    - name: Configure IPv4/IPv6 policy to Allow ICMP
      fortinet.fortios.fortios_firewall_policy:
          vdom: "root"
          state: "present"
          access_token: "{{ access_token }}"
          firewall_policy:
              policyid: 10
              name: "Test Policy Overwrite"
              action: "accept"
              srcintf:
                - name: "port1"
              dstintf:
                - name: "port2"
              srcaddr:
                - name: "example_address_2"
              dstaddr:
                - name: "all"
              service:
                - name: "ALL_ICMP"
              schedule: "always"
              logtraffic: "all"
      register: firewall_policy_2
      ignore_errors: true
    
    - name: debug ipv4 policy 
      debug: 
        msg: "{{ firewall_policy_2 }}"

################ Create custom service to add new service to use in policy #########
    - name: Add custom service
      fortinet.fortios.fortios_firewall_service_custom:
        access_token: "{{ access_token }}"
        vdom: "root"
        state: "present"
        firewall_service_custom:
          name: "example_custom_svc"
          protocol: "TCP/UDP/UDP-Lite/SCTP"
          tcp_portrange: "8080-8081"
          udp_portrange: "8080-8081"
          comment: "Custom service for specific port ranges"
      delegate_to: fortigate
      ignore_errors: true

